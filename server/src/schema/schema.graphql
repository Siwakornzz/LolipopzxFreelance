scalar Date

type Query {
  user: User
  users: [User]!
  subcontract(id: ID!): Subcontract
  subcontracts: [Subcontract]!
  subcontracthasassign(id: ID): [Subcontract]
  subcontractswaiting: [Subcontract]
  subcontractsapprove: [Subcontract]
  subcontractsdenied: [Subcontract]
  subcontractspendingcancel: [Subcontract]
  adminapprovesubcontractspendingcancel: [Subcontract]
  subcontractswebdevelopment: [Subcontract]
  subcontractswordpress: [Subcontract]

  hirecontract(id: ID!): Hirecontract
  hirecontracts: [Hirecontract]
  hirecontractswaiting: [Hirecontract]
  hirecontractswaitingassign: [Hirecontract]
  hirecontractsapprove: [Hirecontract]
  hirecontractsdenied: [Hirecontract]
  hirecontractspendingcancel: [Hirecontract]
  hirecontractssubcontractpendingcancel: [Hirecontract]
  adminapprovehirecontractscancel: [Hirecontract]

  requestmatching(
    id: ID!
    typeofwork: String!
    budget: Float!
    province: String!
  ): [Subcontract]
}

type Mutation {
  signin(email: String!, password: String!): AuthData
  signup(
    firstname: String!
    lastname: String!
    username: String!
    email: String!
    password: String!
  ): User

  requestresetpassword(email: String!): Message!
  resetpassword(password: String!, token: String!): Message!

  updateduserprofile(
    id: ID!
    firstname: String
    lastname: String
    tel: String
    lineid: String
    district: String
    subdistrict: String
    province: String
    zipcode: String
  ): User!

  createsubcontract(
    topic: String!
    typeofwork: String!
    detail: String
    duration: Int!
    startbudget: Float!
    province: String!
  ): Subcontract!

  updatesubcontract(
    id: ID!
    topic: String!
    typeofwork: String!
    detail: String
    duration: Int!
    startbudget: Float!
    province: String!
  ): Subcontract!

  deletesubcontract(id: ID!): Subcontract!

  createhirecontract(
    topic: String!
    detail: String!
    typeofwork: String!
    budget: Float!
    province: String!
    duration: Int!
  ): Hirecontract!

  updatehirecontract(
    id: ID!
    topic: String!
    detail: String!
    typeofwork: String!
    budget: Float!
    province: String!
    duration: Int!
  ): Hirecontract!

  deletehirecontract(id: ID!): Hirecontract!
  assignsubtohire(
    id: ID!
    subcontractAcceptHirecontractId: ID!
    subcontractCreatorId: ID!
  ): Task!
  subcontractdeniedwork(id: ID!): Hirecontract!
  subcontractacceptwork(id: ID!): Hirecontract!
}
type User {
  id: ID!
  firstname: String!
  lastname: String!
  username: String!
  email: String!
  tel: String
  lineid: String
  subdistrict: String
  district: String
  province: String
  zipcode: String
  roles: String!
  subcontracts: [Subcontract]
  hirecontracts: [Hirecontract]
  task: [Task]
  createdAt: Date!
}

type Subcontract {
  id: ID!
  topic: String!
  typeofwork: String!
  detail: String
  duration: Int!
  startbudget: Float!
  province: String!
  status: String!
  subcontractCreatorId: User!
  createdAt: Date!
}

type Hirecontract {
  id: ID!
  topic: String!
  typeofwork: String!
  detail: String
  duration: Int!
  budget: Float!
  province: String!
  status: String!
  hirecontractCreatorId: User!
  createdAt: Date!
}

type Task {
  id: ID!
  subcontract: Subcontract
  hirecontract: Hirecontract
  createdAt: Date!
}

type AuthData {
  user: User
  jwt: String
}

type Message {
  message: String
}
